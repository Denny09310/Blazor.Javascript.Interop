@using System.Text.Json

@inject IWebHostEnvironment Environment

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">SampleWebApp</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        
        @foreach (var route in routes ?? [])
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="@route.Href" Match="@(string.IsNullOrEmpty(route.Href) ? NavLinkMatch.All : NavLinkMatch.Prefix)">
                    <i class="@route.Icon me-3" aria-hidden="true"></i> @route.Label
                </NavLink>
            </div>
        }

    </nav>
</div>

@code
{
    private NavRoute[]? routes;

    protected override async Task OnInitializedAsync()
    {
        var json = await File.ReadAllTextAsync(Path.Combine(Environment.WebRootPath, "routes.json"));
        routes = JsonSerializer.Deserialize<NavRoute[]>(json, new JsonSerializerOptions(JsonSerializerDefaults.Web));
    }

    private record NavRoute
    {
        public required string Label { get; init; }
        public required string Icon { get; init; }
        public required string Href { get; init; }
    }
}